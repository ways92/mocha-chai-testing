{
  "stats": {
    "suites": 15,
    "tests": 17,
    "passes": 17,
    "pending": 0,
    "failures": 0,
    "start": "2022-06-04T11:03:05.396Z",
    "end": "2022-06-04T11:03:15.835Z",
    "duration": 10439,
    "testsRegistered": 17,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "passPercentClass": "success",
    "pendingPercentClass": "danger"
  },
  "suites": {
    "uuid": "9d465de5-865c-437f-b671-561a6c2845c3",
    "title": "",
    "fullFile": "",
    "file": "",
    "beforeHooks": [],
    "afterHooks": [],
    "tests": [],
    "suites": [
      {
        "uuid": "d527fbf1-3af8-4275-a63e-bd4eca5efb0c",
        "title": "POST - Login",
        "fullFile": "D:\\ISI PC\\Tugasku\\Learning QA\\mocha-chai-testing\\test\\login\\POST_login.js",
        "file": "\\test\\login\\POST_login.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [
          {
            "title": "Success",
            "fullTitle": "POST - Login Success",
            "timedOut": false,
            "duration": 602,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "const dataUser = {\n    email: \"eve.holt@reqres.in\",\n    password : \"cityslicka\"\n}\nlet response = await request.post( '/api/register' )\n    .send( dataUser )\n\nexpect( response.status ).to.be.equal( 200 )\nexpect( response.body ).have.property(\"token\")",
            "err": {},
            "isRoot": false,
            "uuid": "5306c082-817d-48ad-abbd-d703de6d96e0",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "5306c082-817d-48ad-abbd-d703de6d96e0"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 602,
        "root": false,
        "rootEmpty": false,
        "_timeout": 10000
      },
      {
        "uuid": "67ee49ef-81e3-4531-8fc6-70726316cc06",
        "title": "POST - Login",
        "fullFile": "D:\\ISI PC\\Tugasku\\Learning QA\\mocha-chai-testing\\test\\login\\POST_loginUnsuccess.js",
        "file": "\\test\\login\\POST_loginUnsuccess.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [
          {
            "title": "Unsuccess",
            "fullTitle": "POST - Login Unsuccess",
            "timedOut": false,
            "duration": 494,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "const dataUser = {\n    email: \"eve.holt@reqres.in\",\n}\nlet response = await request.post( '/api/register' )\n    .send( dataUser )\n\nexpect( response.status ).to.be.equal( 400 )\nexpect( response.body ).have.property(\"error\")",
            "err": {},
            "isRoot": false,
            "uuid": "8cdec608-0926-4575-a4fd-2aaa01a06ac3",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Unsuccess",
            "fullTitle": "POST - Login Unsuccess",
            "timedOut": false,
            "duration": 681,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "const dataUser = {\n    password : \"cityslicka\"\n}\nlet response = await request.post( '/api/register' )\n    .send( dataUser )\n\nexpect( response.status ).to.be.equal( 400 )\nexpect( response.body ).have.property(\"error\")",
            "err": {},
            "isRoot": false,
            "uuid": "cb10ba7e-2459-41be-8942-3aa72501e5a8",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "8cdec608-0926-4575-a4fd-2aaa01a06ac3",
          "cb10ba7e-2459-41be-8942-3aa72501e5a8"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 1175,
        "root": false,
        "rootEmpty": false,
        "_timeout": 10000
      },
      {
        "uuid": "2fc1807d-f112-4626-8a7d-c5c4f750e945",
        "title": "DELETE - User",
        "fullFile": "D:\\ISI PC\\Tugasku\\Learning QA\\mocha-chai-testing\\test\\users\\DELETE_user.js",
        "file": "\\test\\users\\DELETE_user.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [
          {
            "title": "Success",
            "fullTitle": "DELETE - User Success",
            "timedOut": false,
            "duration": 473,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "let response = await request.delete( '/api/users/2' )\n        expect( response.status ).to.be.equal( 204 )",
            "err": {},
            "isRoot": false,
            "uuid": "8ff1299b-71ee-4aa1-906f-2c6efc0e5be8",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "8ff1299b-71ee-4aa1-906f-2c6efc0e5be8"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 473,
        "root": false,
        "rootEmpty": false,
        "_timeout": 10000
      },
      {
        "uuid": "0854c618-8a44-4075-b389-60337de49dc6",
        "title": "GET - List delayed response",
        "fullFile": "D:\\ISI PC\\Tugasku\\Learning QA\\mocha-chai-testing\\test\\users\\GET_listDelayedResponse.js",
        "file": "\\test\\users\\GET_listDelayedResponse.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [
          {
            "title": "Success",
            "fullTitle": "GET - List delayed response Success",
            "timedOut": false,
            "duration": 3554,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "try {\n    let res = await request.get( '/api/users?delay=3' )\n    \n    expect( res.status ).to.be.equal( 200 );\n  } catch (error) {\n    expect.fail(error);\n  }",
            "err": {},
            "isRoot": false,
            "uuid": "4a78eaac-1951-4401-bcbe-7be081f4f8cb",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "4a78eaac-1951-4401-bcbe-7be081f4f8cb"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 3554,
        "root": false,
        "rootEmpty": false,
        "_timeout": 10000
      },
      {
        "uuid": "abfecc44-9271-4278-ad09-ee9b6fe4d1ab",
        "title": "GET - List Users",
        "fullFile": "D:\\ISI PC\\Tugasku\\Learning QA\\mocha-chai-testing\\test\\users\\GET_listUsers.js",
        "file": "\\test\\users\\GET_listUsers.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [
          {
            "title": "Success",
            "fullTitle": "GET - List Users Success",
            "timedOut": false,
            "duration": 132,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "try {\n  let res = await request.get( '/api/users?page=2' )\n  \n  expect( res.status ).to.be.equal( 200 );\n} catch (error) {\n  expect.fail(error);\n}",
            "err": {},
            "isRoot": false,
            "uuid": "406383dc-b99c-4c26-8b4a-8e8020c39838",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "406383dc-b99c-4c26-8b4a-8e8020c39838"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 132,
        "root": false,
        "rootEmpty": false,
        "_timeout": 10000
      },
      {
        "uuid": "7dd6084e-7ccb-45b9-bedc-fb02a090c738",
        "title": "GET - Single user",
        "fullFile": "D:\\ISI PC\\Tugasku\\Learning QA\\mocha-chai-testing\\test\\users\\GET_user.js",
        "file": "\\test\\users\\GET_user.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [
          {
            "title": "Success",
            "fullTitle": "GET - Single user Success",
            "timedOut": false,
            "duration": 176,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "try {\n  let res = await request.get( '/api/users/2' )\n          \n    expect( res.status ).to.be.equal( 200 );\n    expect(res.body.data.last_name).to.be.equal(\"Weaver\")\n\n} catch (error) {\n  expect.fail(error);\n}",
            "err": {},
            "isRoot": false,
            "uuid": "b75cfda4-7f7b-4ae2-b7a1-b3b7bb6c79fd",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "b75cfda4-7f7b-4ae2-b7a1-b3b7bb6c79fd"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 176,
        "root": false,
        "rootEmpty": false,
        "_timeout": 10000
      },
      {
        "uuid": "a6066955-d56e-4017-92dc-20d21f4daa54",
        "title": "GET - Single user not found",
        "fullFile": "D:\\ISI PC\\Tugasku\\Learning QA\\mocha-chai-testing\\test\\users\\GET_userNotFound.js",
        "file": "\\test\\users\\GET_userNotFound.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [
          {
            "title": "Unsuccess",
            "fullTitle": "GET - Single user not found Unsuccess",
            "timedOut": false,
            "duration": 472,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "try {\n  let res = await request.get( '/api/users/24' )\n          \n  expect( res.status ).to.be.equal( 404 );\n  expect(res.body).to.be.empty\n\n} catch (error) {\n  expect.fail(error);\n}",
            "err": {},
            "isRoot": false,
            "uuid": "27106c42-0d18-41fe-8147-3d4b886dd344",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "27106c42-0d18-41fe-8147-3d4b886dd344"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 472,
        "root": false,
        "rootEmpty": false,
        "_timeout": 10000
      },
      {
        "uuid": "ba8f1b27-04c8-4436-baf4-c687fb7c494e",
        "title": "PATCH - Update User",
        "fullFile": "D:\\ISI PC\\Tugasku\\Learning QA\\mocha-chai-testing\\test\\users\\PATCH_updateUser.js",
        "file": "\\test\\users\\PATCH_updateUser.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [
          {
            "title": "Success",
            "fullTitle": "PATCH - Update User Success",
            "timedOut": false,
            "duration": 474,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "const dataUser = {\n    name: \"PATCH\"\n}\nlet response = await request.patch( '/api/users/2' )\n    .send( dataUser )\nexpect( response.status ).to.be.equal( 200 )\nexpect( response.body.name ).to.be.equal( \"PATCH\" )",
            "err": {},
            "isRoot": false,
            "uuid": "af8cf025-ddeb-45d0-a4f7-35af336936b9",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "af8cf025-ddeb-45d0-a4f7-35af336936b9"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 474,
        "root": false,
        "rootEmpty": false,
        "_timeout": 10000
      },
      {
        "uuid": "4d3dbf63-6b53-41e3-b546-ef57d47c4d83",
        "title": "POST - Create User",
        "fullFile": "D:\\ISI PC\\Tugasku\\Learning QA\\mocha-chai-testing\\test\\users\\POST_createUser.js",
        "file": "\\test\\users\\POST_createUser.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [
          {
            "title": "Success",
            "fullTitle": "POST - Create User Success",
            "timedOut": false,
            "duration": 550,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "const dataUser = {\n    name: \"Boaz\",\n    job: \"Marketing\"\n}\n\nlet response = await request.post( '/api/users' )\n    .send( dataUser )\nexpect( response.status ).to.be.equal( 201 )\nexpect( response.body.name ).to.be.equal( \"Boaz\" )",
            "err": {},
            "isRoot": false,
            "uuid": "fcb720d4-0d51-46b9-8f8c-2660a63a63c2",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "fcb720d4-0d51-46b9-8f8c-2660a63a63c2"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 550,
        "root": false,
        "rootEmpty": false,
        "_timeout": 10000
      },
      {
        "uuid": "5c77fda1-5931-4708-92cb-af5e012057f2",
        "title": "PUT - Update User",
        "fullFile": "D:\\ISI PC\\Tugasku\\Learning QA\\mocha-chai-testing\\test\\users\\PUT_updateUser.js",
        "file": "\\test\\users\\PUT_updateUser.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [
          {
            "title": "Success",
            "fullTitle": "PUT - Update User Success",
            "timedOut": false,
            "duration": 486,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "const dataUser = {\n    name: \"PUT\",\n    job: \"Sales\"\n}\nlet response = await request.put( '/api/users/2' )\n    .send( dataUser )\nexpect( response.status ).to.be.equal( 200 )\nexpect( response.body.name ).to.be.equal( \"PUT\" )",
            "err": {},
            "isRoot": false,
            "uuid": "1f814481-2129-4144-9098-631200dbe9e0",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "1f814481-2129-4144-9098-631200dbe9e0"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 486,
        "root": false,
        "rootEmpty": false,
        "_timeout": 10000
      },
      {
        "uuid": "53723f11-f8d9-4676-b932-3862083352f9",
        "title": "POST - Register",
        "fullFile": "D:\\ISI PC\\Tugasku\\Learning QA\\mocha-chai-testing\\test\\register\\POST_register.js",
        "file": "\\test\\register\\POST_register.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [
          {
            "title": "Success",
            "fullTitle": "POST - Register Success",
            "timedOut": false,
            "duration": 527,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "const dataUser = {\n    email: \"eve.holt@reqres.in\",\n    password: \"pistol\"\n}\nlet response = await request.post( '/api/register' )\n    .send( dataUser )\n\nexpect( response.status ).to.be.equal( 200 )\nexpect( response.body ).have.property(\"token\")",
            "err": {},
            "isRoot": false,
            "uuid": "05e667ec-79f2-4b3f-8478-a354ad878c7f",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "05e667ec-79f2-4b3f-8478-a354ad878c7f"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 527,
        "root": false,
        "rootEmpty": false,
        "_timeout": 10000
      },
      {
        "uuid": "f3a26892-28c2-4cda-ad2a-0d4b147161fd",
        "title": "POST - Register",
        "fullFile": "D:\\ISI PC\\Tugasku\\Learning QA\\mocha-chai-testing\\test\\register\\POST_registerUnsuccess.js",
        "file": "\\test\\register\\POST_registerUnsuccess.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [
          {
            "title": "Unsuccess",
            "fullTitle": "POST - Register Unsuccess",
            "timedOut": false,
            "duration": 506,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "const dataUser = {\n    email: \"eve.holt@reqres.in\"\n}\n\nlet response = await request.post( '/api/register' )\n    .send( dataUser )\nexpect( response.status ).to.be.equal( 400 )\nexpect( response.body.error ).to.be.contain(\"Missing\")",
            "err": {},
            "isRoot": false,
            "uuid": "0fd70d43-04b9-4541-8181-e34b2c213bf0",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Unsuccess",
            "fullTitle": "POST - Register Unsuccess",
            "timedOut": false,
            "duration": 511,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "const dataUser = {\n    password: \"pistol\"\n}\n\nlet response = await request.post( '/api/register' )\n     .send( dataUser )\n \n console.log(response.body.error)\nexpect( response.status ).to.be.equal( 400 )\nexpect( response.body.error ).to.be.contain(\"Missing\")",
            "err": {},
            "isRoot": false,
            "uuid": "f673f209-751e-4a20-8294-b778027c1524",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "0fd70d43-04b9-4541-8181-e34b2c213bf0",
          "f673f209-751e-4a20-8294-b778027c1524"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 1017,
        "root": false,
        "rootEmpty": false,
        "_timeout": 10000
      },
      {
        "uuid": "e00816dd-cba7-4844-ba43-1cc058e6ada5",
        "title": "GET - List unknown",
        "fullFile": "D:\\ISI PC\\Tugasku\\Learning QA\\mocha-chai-testing\\test\\unknown\\GET_listUnknown.js",
        "file": "\\test\\unknown\\GET_listUnknown.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [
          {
            "title": "Success",
            "fullTitle": "GET - List unknown Success",
            "timedOut": false,
            "duration": 144,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "try {\n  let res = await request.get( '/api/unknown' )\n          \n    expect( res.status ).to.be.equal( 200 );\n\n} catch (error) {\n  expect.fail(error);\n}",
            "err": {},
            "isRoot": false,
            "uuid": "1690ce50-0170-432a-bd37-ed38c505945b",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "1690ce50-0170-432a-bd37-ed38c505945b"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 144,
        "root": false,
        "rootEmpty": false,
        "_timeout": 10000
      },
      {
        "uuid": "07866e91-67c8-4bca-aefb-6c6e0425d8f8",
        "title": "GET - Single unknown",
        "fullFile": "D:\\ISI PC\\Tugasku\\Learning QA\\mocha-chai-testing\\test\\unknown\\GET_singleUnknown.js",
        "file": "\\test\\unknown\\GET_singleUnknown.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [
          {
            "title": "Success",
            "fullTitle": "GET - Single unknown Success",
            "timedOut": false,
            "duration": 121,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "try {\n  let res = await request.get( '/api/unknown/2' )\n          \n    expect( res.status ).to.be.equal( 200 );\n    expect(res.body.data.name).to.be.equal(\"fuchsia rose\")\n} catch (error) {\n  expect.fail(error);\n}",
            "err": {},
            "isRoot": false,
            "uuid": "df8f64d0-0efb-4dc5-b663-9233337f2444",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "df8f64d0-0efb-4dc5-b663-9233337f2444"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 121,
        "root": false,
        "rootEmpty": false,
        "_timeout": 10000
      },
      {
        "uuid": "13c41899-1443-4ef3-bfb3-dae8dc15a94b",
        "title": "GET - Single unknown not found",
        "fullFile": "D:\\ISI PC\\Tugasku\\Learning QA\\mocha-chai-testing\\test\\unknown\\GET_singleUnknownNotFound.js",
        "file": "\\test\\unknown\\GET_singleUnknownNotFound.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [
          {
            "title": "Unsuccess",
            "fullTitle": "GET - Single unknown not found Unsuccess",
            "timedOut": false,
            "duration": 501,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "try {\n  let res = await request.get( '/api/unknown/24' )\n          \n  expect( res.status ).to.be.equal( 404 );\n  expect(res.body).to.be.empty\n} catch (error) {\n  expect.fail(error);\n}",
            "err": {},
            "isRoot": false,
            "uuid": "8a695ba2-0632-4545-8a5f-f8bcc055a02a",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "8a695ba2-0632-4545-8a5f-f8bcc055a02a"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 501,
        "root": false,
        "rootEmpty": false,
        "_timeout": 10000
      }
    ],
    "passes": [],
    "failures": [],
    "pending": [],
    "skipped": [],
    "duration": 0,
    "root": true,
    "rootEmpty": true,
    "_timeout": 10000
  },
  "copyrightYear": 2022
}